{
	"info": {
		"_postman_id": "8330472b-a86a-4493-9f96-5d0f6cc333cc",
		"name": "CtrlEat",
		"description": "O sistema desenvolvido para o controle de pedidos para uma lanchonete de fast food em expansão, visando otimizar o atendimento ao cliente, desde pedidos personalizados até gestão de estoque e pagamentos, promovendo eficiência operacional e satisfação dos clientes.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30871606"
	},
	"item": [
		{
			"name": "Infra",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/health",
							"host": [
								"{{host}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Realiza uma verificação da saúde da aplicação."
					},
					"response": []
				}
			],
			"description": "Rotas relacionadas à infraestrutura da API."
		},
		{
			"name": "Clientes",
			"item": [
				{
					"name": "Cadastrar cliente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var status = pm.response.code;\r",
									"\r",
									"if (status === 201) {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"client_id\", jsonData.id);\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let create_array = (total, numero) => Array.from(Array(total), () => number_random(numero));\r",
									"let number_random = (number) => (Math.round(Math.random() * number));\r",
									"let mod = (dividendo, divisor) => Math.round(dividendo - (Math.floor(dividendo / divisor) * divisor));\r",
									"\r",
									"function cpf() {\r",
									"    let total_array = 9;\r",
									"    let n = 9;\r",
									"    let [n1, n2, n3, n4, n5, n6, n7, n8, n9] = create_array(total_array, n);\r",
									"\r",
									"    let d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
									"    d1 = 11 - (mod(d1, 11));\r",
									"    \r",
									"    if (d1 >= 10) {\r",
									"        d1 = 0;\r",
									"    }\r",
									"\r",
									"    let d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
									"    d2 = 11 - (mod(d2, 11));\r",
									"    if (d2 >= 10) {\r",
									"        d2 = 0;\r",
									"    }\r",
									"\r",
									"    return `${n1}${n2}${n3}${n4}${n5}${n6}${n7}${n8}${n9}${d1}${d2}`;\r",
									"}\r",
									"\r",
									"pm.environment.set(\"random_cpf\", cpf());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"documentId\": \"{{random_cpf}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/clients",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						},
						"description": "Realiza o cadastro de um cliente.\n\nOs dados pessoais podem ou não ser informados."
					},
					"response": []
				},
				{
					"name": "Obter todos os clientes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v1/clients",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						},
						"description": "Retorna todos os clientes cadastrados no sistema."
					},
					"response": []
				},
				{
					"name": "Obter um cliente pelo CPF (ou Id)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var host = pm.environment.get(\"host\")\r",
									"\r",
									"var getClientsRequest = {\r",
									"    url: `${host}/api/v1/clients`,\r",
									"    method: \"GET\"\r",
									"};\r",
									"\r",
									"var createClientRequest = {\r",
									"    url: `${host}/api/v1/clients`,\r",
									"    method: \"POST\",\r",
									"    header: \"Content-Type:application/json\",\r",
									"    body: {\r",
									"        mode: \"raw\",\r",
									"        raw: JSON.stringify({\r",
									"            \"firstName\": \"Matheus Isaac\",\r",
									"            \"lastName\": \"Márcio Moraes\",\r",
									"            \"email\": \"matheus_moraes@lencise.com\",\r",
									"            \"documentId\": \"60800326350\"\r",
									"        })\r",
									"    }\r",
									"};\r",
									"\r",
									"var document_id = pm.environment.get(\"document_id\");\r",
									"\r",
									"if (document_id == \"abc\" || document_id == null) {\r",
									"    pm.sendRequest(getClientsRequest, function (err, res) {\r",
									"        if(err) {\r",
									"            console.log(err);\r",
									"        } else {\r",
									"            var clients = res.json();\r",
									"\r",
									"            if(clients.length === 0) {                \r",
									"                pm.sendRequest(createClientRequest, function(err, res) {\r",
									"                    if (err) {\r",
									"                        console.log(err)\r",
									"                    } else {\r",
									"                        var status = res.code;\r",
									"\r",
									"                        if (status === 201) {\r",
									"                            var jsonData = res.json();\r",
									"                            pm.environment.set(\"document_id\", jsonData.documentId);\r",
									"                        }\r",
									"                    }\r",
									"                });\r",
									"            } else {\r",
									"                var document_id = null;\r",
									"\r",
									"                while(document_id == null) {\r",
									"                    var random_index = Math.floor(Math.random() * clients.length);\r",
									"                    document_id = clients[random_index].documentId;\r",
									"                }\r",
									"\r",
									"                pm.environment.set(\"document_id\", document_id);\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v1/clients/:documentId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"clients",
								":documentId"
							],
							"variable": [
								{
									"key": "documentId",
									"value": "{{document_id}}"
								}
							]
						},
						"description": "Retorna um cliente através do seu CPF. Também é possível utilizar a mesma rota para buscar um cliente através de seu identificador único."
					},
					"response": []
				}
			],
			"description": "Rotas relacionadas ao gerenciamento dos clientes."
		},
		{
			"name": "Categorias",
			"item": [
				{
					"name": "Obter todos as categorias",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v1/products/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"categories"
							]
						},
						"description": "Retorna todas as categorias dos protudos cadastradas no sistema."
					},
					"response": []
				}
			],
			"description": "Rotas relacionadas ao gerenciamento das categorias dos produtos."
		},
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Obter todos os produtos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v1/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						},
						"description": "Retorna todos os produtos cadastrados no sistema."
					},
					"response": []
				},
				{
					"name": "Obter todos os Lanches",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v1/products/category/:category_name",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"category",
								":category_name"
							],
							"variable": [
								{
									"key": "category_name",
									"value": "Lanches"
								}
							]
						},
						"description": "Retorna todos os **Lanches** cadastrados no sistema."
					},
					"response": []
				},
				{
					"name": "Obter todos os Acompanhamentos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v1/products/category/:category_name",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"category",
								":category_name"
							],
							"variable": [
								{
									"key": "category_name",
									"value": "Acompanhamentos"
								}
							]
						},
						"description": "Retorna todos os **Acompanhamentos** cadastrados no sistema."
					},
					"response": []
				},
				{
					"name": "Obter todos as Bebidas",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v1/products/category/:category_name",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"category",
								":category_name"
							],
							"variable": [
								{
									"key": "category_name",
									"value": "Bebidas"
								}
							]
						},
						"description": "Retorna todos as **Bebidas** cadastrados no sistema."
					},
					"response": []
				},
				{
					"name": "Obter todos as Sobremesas",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v1/products/category/:category_name",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"category",
								":category_name"
							],
							"variable": [
								{
									"key": "category_name",
									"value": "Sobremesas"
								}
							]
						},
						"description": "Retorna todos as **Sobremesas** cadastrados no sistema."
					},
					"response": []
				},
				{
					"name": "Obter imagem de um produto",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var host = pm.environment.get(\"host\")\r",
									"\r",
									"var getProductsRequest = (category) => { \r",
									"    return {\r",
									"        url: `${host}/api/v1/products/category/${category}`,\r",
									"        method: \"GET\"\r",
									"    }\r",
									"};\r",
									"\r",
									"var getRandomProduct = (category, env_name) => {\r",
									"    pm.sendRequest(getProductsRequest(category), \r",
									"        function (err, res){\r",
									"            if (err) {\r",
									"                console.log(err)\r",
									"            } else {\r",
									"                var products = res.json();\r",
									"                var product_id = products[(Math.floor(Math.random() * products.length))].id;\r",
									"                pm.environment.set(env_name, product_id);\r",
									"            }\r",
									"        }\r",
									"    )\r",
									"}\r",
									"\r",
									"getRandomProduct(\"Lanches\", \"lanche_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v1/products/{{lanche_id}}/image",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{lanche_id}}",
								"image"
							]
						},
						"description": "Retorna a imagem do produto."
					},
					"response": []
				}
			],
			"description": "Rotas relacionadas ao gerenciamento dos produtos."
		},
		{
			"name": "Pedidos",
			"item": [
				{
					"name": "Criar um pedido para um cliente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var host = pm.environment.get(\"host\")\r",
									"\r",
									"var getClientsRequest = {\r",
									"    url: `${host}/api/v1/clients`,\r",
									"    method: \"GET\"\r",
									"};\r",
									"\r",
									"var createClientRequest = {\r",
									"    url: `${host}/api/v1/clients`,\r",
									"    method: \"POST\",\r",
									"    header: \"Content-Type:application/json\",\r",
									"    body: {\r",
									"        mode: \"raw\",\r",
									"        raw: JSON.stringify({\r",
									"            \"firstName\": \"Matheus Isaac\",\r",
									"            \"lastName\": \"Márcio Moraes\",\r",
									"            \"email\": \"matheus_moraes@lencise.com\",\r",
									"            \"documentId\": \"60800326350\"\r",
									"        })\r",
									"    }\r",
									"};\r",
									"\r",
									"var client_id = pm.environment.get(\"client_id\");\r",
									"\r",
									"if (client_id === \"abc\") {\r",
									"    pm.sendRequest(getClientsRequest, function (err, res) {\r",
									"        if(err) {\r",
									"            console.log(err);\r",
									"        } else {\r",
									"            var clients = res.json();\r",
									"\r",
									"            if(clients.length === 0) {                \r",
									"                pm.sendRequest(createClientRequest, function(err, res) {\r",
									"                    if (err) {\r",
									"                        console.log(err)\r",
									"                    } else {\r",
									"                        var status = res.code;\r",
									"\r",
									"                        if (status === 201) {\r",
									"                            var jsonData = res.json();\r",
									"                            pm.environment.set(\"client_id\", jsonData.id);\r",
									"                        }\r",
									"                    }\r",
									"                });\r",
									"            } else {\r",
									"                var first_client_id = clients[0].id;\r",
									"\r",
									"                pm.environment.set(\"client_id\", first_client_id);\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var status = pm.response.code;\r",
									"\r",
									"if (status === 201) {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"order_id\", jsonData.id);\r",
									"    pm.environment.set(\"order_track_id\", jsonData.trackId);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"clientId\": \"{{client_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/orders",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							]
						},
						"description": "Inicializa um pedido para o cliente."
					},
					"response": []
				},
				{
					"name": "Visualizar um pedido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/orders/:order_id",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								":order_id"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "{{order_id}}"
								}
							]
						},
						"description": "Retorna os detalhes do pedido do cliente."
					},
					"response": []
				},
				{
					"name": "Visualizar todos os pedidos em andamento",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/orders/tracking",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"tracking"
							]
						},
						"description": "Retorna todos os pedidos no sistema que estejam em preparo.\n\n**ATENÇÃO:** Pedidos aguardando pagamento ou já entregues ao cliente não são mostrados nessa API."
					},
					"response": []
				},
				{
					"name": "Adicionar um lanche ao pedido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var host = pm.environment.get(\"host\")\r",
									"\r",
									"var getProductsRequest = (category) => { \r",
									"    return {\r",
									"        url: `${host}/api/v1/products/category/${category}`,\r",
									"        method: \"GET\"\r",
									"    }\r",
									"};\r",
									"\r",
									"var getRandomProduct = (category, env_name) => {\r",
									"    pm.sendRequest(getProductsRequest(category), \r",
									"        function (err, res){\r",
									"            if (err) {\r",
									"                console.log(err)\r",
									"            } else {\r",
									"                var products = res.json();\r",
									"                var product_id = products[(Math.floor(Math.random() * products.length))].id;\r",
									"                pm.environment.set(env_name, product_id);\r",
									"            }\r",
									"        }\r",
									"    )\r",
									"}\r",
									"\r",
									"getRandomProduct(\"Lanches\", \"lanche_id\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": \"{{lanche_id}}\",\r\n  \"quantity\": {{random_product_quantity}},\r\n  \"observation\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/orders/:order_id/items",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								":order_id",
								"items"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "{{order_id}}"
								}
							]
						},
						"description": "Adiciona ao pedido um lanche qualquer e com alguma quantidade aleatória."
					},
					"response": []
				},
				{
					"name": "Adicionar um acompanhamento ao pedido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var host = pm.environment.get(\"host\")\r",
									"\r",
									"var getProductsRequest = (category) => { \r",
									"    return {\r",
									"        url: `${host}/api/v1/products/category/${category}`,\r",
									"        method: \"GET\"\r",
									"    }\r",
									"};\r",
									"\r",
									"var getRandomProduct = (category, env_name) => {\r",
									"    pm.sendRequest(getProductsRequest(category), \r",
									"        function (err, res){\r",
									"            if (err) {\r",
									"                console.log(err)\r",
									"            } else {\r",
									"                var products = res.json();\r",
									"                var product_id = products[(Math.floor(Math.random() * products.length))].id;\r",
									"                pm.environment.set(env_name, product_id);\r",
									"            }\r",
									"        }\r",
									"    )\r",
									"}\r",
									"\r",
									"getRandomProduct(\"Acompanhamentos\", \"acompanhamento_id\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": \"{{acompanhamento_id}}\",\r\n  \"quantity\": {{random_product_quantity}},\r\n  \"observation\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/orders/:order_id/items",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								":order_id",
								"items"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "{{order_id}}"
								}
							]
						},
						"description": "Adiciona ao pedido um acompanhamento qualquer e com alguma quantidade aleatória."
					},
					"response": []
				},
				{
					"name": "Adicionar uma bebida ao pedido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var host = pm.environment.get(\"host\")\r",
									"\r",
									"var getProductsRequest = (category) => { \r",
									"    return {\r",
									"        url: `${host}/api/v1/products/category/${category}`,\r",
									"        method: \"GET\"\r",
									"    }\r",
									"};\r",
									"\r",
									"var getRandomProduct = (category, env_name) => {\r",
									"    pm.sendRequest(getProductsRequest(category), \r",
									"        function (err, res){\r",
									"            if (err) {\r",
									"                console.log(err)\r",
									"            } else {\r",
									"                var products = res.json();\r",
									"                var product_id = products[(Math.floor(Math.random() * products.length))].id;\r",
									"                pm.environment.set(env_name, product_id);\r",
									"            }\r",
									"        }\r",
									"    )\r",
									"}\r",
									"\r",
									"getRandomProduct(\"Bebidas\", \"bebida_id\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": \"{{bebida_id}}\",\r\n  \"quantity\": {{random_product_quantity}},\r\n  \"observation\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/orders/:order_id/items",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								":order_id",
								"items"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "{{order_id}}"
								}
							]
						},
						"description": "Adiciona ao pedido uma bebida qualquer e com alguma quantidade aleatória."
					},
					"response": []
				},
				{
					"name": "Adicionar uma sobremesa ao pedido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var host = pm.environment.get(\"host\")\r",
									"\r",
									"var getProductsRequest = (category) => { \r",
									"    return {\r",
									"        url: `${host}/api/v1/products/category/${category}`,\r",
									"        method: \"GET\"\r",
									"    }\r",
									"};\r",
									"\r",
									"var getRandomProduct = (category, env_name) => {\r",
									"    pm.sendRequest(getProductsRequest(category), \r",
									"        function (err, res){\r",
									"            if (err) {\r",
									"                console.log(err)\r",
									"            } else {\r",
									"                var products = res.json();\r",
									"                var product_id = products[(Math.floor(Math.random() * products.length))].id;\r",
									"                pm.environment.set(env_name, product_id);\r",
									"            }\r",
									"        }\r",
									"    )\r",
									"}\r",
									"\r",
									"getRandomProduct(\"Sobremesas\", \"sobremesa_id\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": \"{{sobremesa_id}}\",\r\n  \"quantity\": {{random_product_quantity}},\r\n  \"observation\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/orders/:order_id/items",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								":order_id",
								"items"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "{{order_id}}"
								}
							]
						},
						"description": "Adiciona ao pedido uma sobremesa qualquer e com alguma quantidade aleatória."
					},
					"response": []
				},
				{
					"name": "Realizar o checkout do pedido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/orders/:order_id/checkout",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								":order_id",
								"checkout"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "{{order_id}}"
								}
							]
						},
						"description": "Simula o checkout do pedido, ou seja, simula que o cliente realizou o pagamento e está no aguardo da confirmação da resposta se deu certo ou não o pagamento."
					},
					"response": []
				},
				{
					"name": "Simular o hook de pagamento",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"orderId\": \"{{order_id}}\",\r\n    \"paymentApproved\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/orders/checkout/hook",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"checkout",
								"hook"
							]
						},
						"description": "Atualiza o status do pagamento do pedido, podendo cancelar o mesmo ou enviá-lo para a cozinha e dar início ao seu preparo."
					},
					"response": []
				},
				{
					"name": "Visualizar os pedidos pagos e não iniciados",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/orders/tracking?status=Received",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"tracking"
							],
							"query": [
								{
									"key": "status",
									"value": "Received"
								}
							]
						},
						"description": "Retorna todos os pedidos no sistema que estejam prontos para iniciarem o preparo."
					},
					"response": []
				},
				{
					"name": "Iniciar preparo do pedido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"OnGoing\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/orders/:order_id/status",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								":order_id",
								"status"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "{{order_id}}"
								}
							]
						},
						"description": "A cozinha atualiza o status do pedido para dar início ao seu preparo."
					},
					"response": []
				},
				{
					"name": "Pedido pronto para retirada",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"Done\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/orders/:order_id/status",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								":order_id",
								"status"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "{{order_id}}"
								}
							]
						},
						"description": "A cozinha atualiza o status do pedido para informar ao cliente que o pedido esta pronto para ser retirado."
					},
					"response": []
				},
				{
					"name": "Pedido entregue ao cliente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"Completed\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/orders/:order_id/status",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								":order_id",
								"status"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "{{order_id}}"
								}
							]
						},
						"description": "A cozinha atualiza o status do pedido informando que o mesmo foi retirado pelo cliente."
					},
					"response": []
				}
			],
			"description": "Rotas relacionadas ao gerenciamento de um pedido, sua criação, interação com o cliente e com a cozinha (preparo).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var randomProductQuantity = 0;",
							"",
							"while(randomProductQuantity === 0) {",
							"    randomProductQuantity = Math.floor(Math.random() * 5);",
							"}",
							"",
							"pm.environment.set(\"random_product_quantity\", randomProductQuantity);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}